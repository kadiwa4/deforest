[workspace]
members = ["deforest_derive"]

[workspace.lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
redundant_lifetimes = "warn"
unnameable_types = "warn"
unreachable_pub = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"

[workspace.lints.rustdoc]
unescaped_backticks = "warn"

[package]
name = "deforest"
version = "0.3.2"
edition = "2021"
rust-version = "1.74"
description = "efficient `#![no_std]` parser for devicetree blobs"
repository = "https://github.com/kadiwa4/deforest"
license = "MIT"
keywords = ["devicetree", "device-tree", "parser"]
categories = ["embedded", "no-std::no-alloc", "hardware-support", "parser-implementations"]
include = ["/README.md", "/src", "/examples", "/tests"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[package.metadata.docs.rs]
all-features = true

[[example]]
name = "borrowed_model"
crate-type = ["lib"]
test = true
required-features = ["derive"]

[[example]]
name = "owned_model"
crate-type = ["lib"]
test = true
required-features = ["alloc", "derive"]

[[test]]
name = "test"
required-features = ["alloc"]

[dependencies]
ascii = { version = "1.1.0", default-features = false }
deforest_derive = { path = "deforest_derive", version = "=0.3.0", optional = true }
fallible-iterator = { version = "0.3.0", default-features = false }
zerocopy = { version = "0.7.31", default-features = false, features = ["derive"] }

[features]
alloc = ["fallible-iterator/alloc"]
std = ["alloc", "fallible-iterator/std"]

derive = ["deforest_derive"]
model = []

[lints]
workspace = true
